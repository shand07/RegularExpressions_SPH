import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashMap;
import java.util.Scanner;

/**
 * This program reads the output files generated by NovelProcessor.java, aggregates the counts for each pattern across
 * all novels, and outputs the final count for each pattern.
 * <p>
 * Assignment 4
 * CS322 - Compiler Construction
 * Spring 2024
 * </p>
 * @author Sean Hand
 * @version 1.0
 */
public class WordCounter {

    /**
     * Main method to execute the program.
     * @param args Command line arguments - not used in this version.
     */
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Prompt user for output file names
        System.out.print("Enter the names of the output files generated by NovelProcessor, separated by spaces: ");
        String[] outputFiles = scanner.nextLine().split("\\s+");

        HashMap<String, Integer> patternCounts = new HashMap<>();
        
        for (String novel : outputFiles) {
            try (BufferedReader reader = new BufferedReader(new FileReader(novel))) {
                String line;
                while ((line = reader.readLine()) != null) {
                    String[] parts = line.split("\\|");
                    String pattern = parts[0];
                    int count = Integer.parseInt(parts[1]);
                    patternCounts.put(pattern, patternCounts.getOrDefault(pattern, 0) + count);
                }
            } catch (IOException e) {
                System.err.println("Error reading file: " + e.getMessage());
            }
        }
        
        for (String pattern : patternCounts.keySet()) {
            System.out.println(pattern + "|" + patternCounts.get(pattern));
        }

        scanner.close();
    }
}
